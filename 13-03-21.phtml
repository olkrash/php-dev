<?php
declare(strict_types=1);
/*
Задача 9: Работа со файлами
- Пусть в корне вашего сайта лежит файл test.txt, в котором записан текст '12345'. Откройте этот файл, запишите в конец текста восклицательный знак и сохраните новый текст обратно в файл.
- Пусть в корне вашего сайта лежит файл test.txt. Пусть также в корне вашего сайта лежит папка dir. Переместите файл в эту папку.
Задача 10: Создать форму авторизации
<form action="" method="POST">
	<input name="login">
	<input name="password" type="password">
	<input type="submit" value="Отправить">
</form>
- Сделайте так, чтобы, если пользователь прошел авторизацию - выводилось сообщение об этом, а если не прошел - то сообщение о том, что введенный логин или пароль вбиты не правильно.
Подсказка: сверять введенные данные можно с заранее подготовленными в массиве.
- Модифицируйте код так, чтобы в случае успешной авторизации форма для ввода пароля и логина не показывалась на экране. ( Добавьте кнопку по которой будет происходить разлогнинивание.)
- Модифицируйте код так, чтобы на странице index.php выводилось сообщение об успешной авторизации. Решите задачу через флеш-сообщения на сессиях.
- Пусть на нашем сайте, кроме страницы login.php, есть еще и страницы 1.php, 2.php и 3.php. Сделайте так, чтобы к этим страницам мог получить доступ только авторизованный пользователь. Если пользователь не авторизован - выведите ему сообщение об этом и ссылку на страницу login.php.
- Модифицируйте ваш код так, чтобы нельзя было зарегистрировать пользователя с пустым логином или паролем.
- Модифицируйте ваш код так, чтобы логин был длиной от 4 до 10 символов. В случае, если это не так, выводите сообщение об этом над формой.
- Модифицируйте ваш код так, чтобы пароль был длиной от 6 до 12 символов. В случае, если это не так, выводите сообщение об этом над формой.*/

//Задача 1: Работа со строками и переменными
//• Определить три переменных со значениями:
//"Доброе утро"
//"дамы"
//"и господа"
//• Вывести значения переменных в браузер.
//• Сформировать строку "Доброе утро, дамы и господа" используя созданные переменные и
//комбинированный оператор склеивания
//$a = "Доброе утро";
//$b = "дамы";
//$c = "и господа";
//var_dump($a, $b, $c);
//echo ("$a  ',' $b ' ' $c");

//Задача 2: Работа с массивами

//• Создать 2 простых массива с количеством элементов 5.
//$arr1 = [
//    'key1' => 'value1',
//    'key2' => 'value2',
//    'key3' => 'value3',
//    'key4' => 'value4',
//    'key5' => 'value5',
//    ];
//$arr2 = [
//    'key6' => 'value6',
//    'key7' => 'value7',
//    'key8' => 'value8',
//    'key9' => 'value9',
//    'key10' => 'value10',
//];

//• В первый массив добавить один элемент с индексом (!)element и произвольным значением.
//$arr1 += ['(!)element' => 'value0'];
//echo "<pre>";
//var_dump($arr1);
//echo "</pre>";

//• Из второго массива удалить элемент с индексом 0. Используйте функцию unset();
//unset($arr2[0]);
//echo "<pre>";
//var_dump($arr2);
//echo "</pre>";

//• Вывести на экран элементы под индексом 2 из первого и второго массива.
//echo "<pre>";
//var_dump($arr1['key2'] . $arr2['key7']);
//echo "</pre>";

//• Вывести на экран содержимое массивов полностью.
//echo "<pre>";
//var_dump($arr1 + $arr2);
//echo "</pre>";

//• Найти количество элементов в каждом массиве. Используйте функцию count(). Вывести
//результаты на экран
//echo "<pre>";
//$count = count($arr1);
//$count1 = count($arr2);
//var_dump($count , $count1);
//echo "</pre>";

//Задача 3: Работа с датами
////- Выведите текущую дату-время в форматах '2025-12-31'.
//echo '1) ' . date('Y-m-d',time());
////'31.12.2025'
//echo '<br>2) ' . date('d.m.Y',time());
//////'31.12.13'
//echo '<br>3) ' . date('d.m.y',time());
////'12:59:59'
//echo '<br>4) ' . date('h:i:s',time());

//echo '<br>5) ' . date('Y-m-d h:i:s',time());

//Задача 4: Сделайте функцию. Дан массив с числами. Проверьте, есть ли в нем два одинаковых числа подряд. Если есть -
// выведите 'да', а если нет - выведите 'нет'.
//$arr = [3, 5, 6, 7, 8, 8];
//function equalNumbers($arr) {
//    $yes = false;
//    for ($i = 0; $i < count($arr) - 1; $i++) {
//        if ($arr[$i] === next($arr)) {
//            $yes = true;
//        }
//    }
//    return $yes;
//}
//var_dump(equalNumbers($arr));

//Задача 5: Сделайте функцию, которая параметрами принимает 2 числа. Если их сумма больше 10 - пусть функция вернет true
//, а если нет - false.
//function addParam($a = 0, $b = 0){
//    if ($a + $b >= 10){
//        return true;
//    }
//    else{
//        return false;
//    }
//}
//var_dump(addParam(5, 3));

//Задача 6:  Сделайте функцию. Дан двухмерный массив с числами, например [[1, 2], [3, 4]], [[5, 6], [7, 8]].
// Найдите сумму элементов этого массива. Массив, конечно же, может быть произвольным.
//$arrMain = [
//    'first' => [1, 2, 3, 4],
//    'second' => [5, 6, 7, 8],
//];
//function getSum($arr){
//    $sum = 0;
//    foreach ($arr as $key => $ar ) {
//        foreach ($ar as $a){
//            $sum += $a;
//        }
//    }
//    return $sum;
//}
//echo "Сумма массива [1,2,3] = ";
//print_r(getSum( $arrMain )) ;


//Задача 7: Работа с cookie
//Спросите дату рождения пользователя. При следующем заходе на сайт напишите сколько дней осталось до его дня рождения.
//Если сегодня день рождения пользователя - поздравьте его!
//$be= date('Y');
//$bm= (int) 10;// $_POST['Birthday_Month'];
//$bd=(int) 11;// $_POST['Birthday_day'];
//$date = "$be-$bm-$bd";
//$check_time = strtotime($date) - time();
//$months = floor($check_time/86400/12);
//$days = floor($check_time/86400);
//$hours = floor(($check_time%86400)/3600);
//$minutes = floor(($check_time%3600)/60);
//echo "Осталось минут: $minutes <br>\n";
//echo "Осталось часов $hours<br>\n";
//echo "Осталось дней $days<br>\n";
//echo "Осталось месяцев $months<br>\n";

//Задача 8: Работа со session Сделайте счетчик обновления страницы пользователем. Данные храните в сессии. Скрипт должен
// выводить на экран количество обновлений. При первом заходе на страницу он должен вывести сообщение о том, что вы еще
// не обновляли страницу.

?>
